# Generated by Django 2.0.7 on 2018-07-26 13:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_type', models.CharField(choices=[('P', 'Predavanja'), ('L', 'Laboratorijske vaje'), ('A', 'Avditorne vaje')], max_length=16)),
                ('n_students', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('short_name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Provides',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n', models.IntegerField(null=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teaching_requirements.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('per_student', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=16, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('short_name', models.CharField(blank=True, default='', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='requirement',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teaching_requirements.Subject'),
        ),
        migrations.AddField(
            model_name='requirement',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teaching_requirements.Resource'),
        ),
        migrations.AddField(
            model_name='provides',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teaching_requirements.Resource'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='resources',
            field=models.ManyToManyField(through='teaching_requirements.Provides', to='teaching_requirements.Resource'),
        ),
        migrations.AddField(
            model_name='activity',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teaching_requirements.Subject'),
        ),
        migrations.AddField(
            model_name='activity',
            name='teachers',
            field=models.ManyToManyField(to='teaching_requirements.Teacher'),
        ),
    ]
